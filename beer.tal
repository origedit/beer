|10 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1

|100
	#64 @bottle
		DUP num { 20 "bottles 20 "of 20 "beer 20 "on 20 "the 20 "wall 0a 00 } STH2r str
		DUP num { 20 "bottles 20 "of 20 "beer 0a 00 } STH2r str
		{ "take 20 "one 20 "down, 20 "pass 20 "it 20 "around 0a 0a 00 } STH2r str
		#01 SUB
		DUP ?bottle
	POP { "no 20 "more 20 "bottles 20 "of 20 "beer 20 "on 20 "the 20 "wall. 0a 00 } STH2r str BRK

@str ( str* -- )
	&while
		LDAk .Console/write DEO
		INC2 LDAk ?&while
	POP2 JMP2r

@num ( n -- )
	#0a DIVk STHk MUL SUB STHr DUP #00 EQU ?{ DUP digit } POP
	( >> )
@digit ( n -- )
	#30 ADD .Console/write DEO
	JMP2r
